<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>